{"version":3,"sources":["components/AddCategory.js","utils/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","item","console","log","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","href","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","toUpperCase","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KAsCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAmBrC,OACQ,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,KACVO,QAAQC,IAAI,wBAMhB,SACI,uBACIC,KAAK,OACLC,MAAOX,EACPY,SApBU,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,QAoBXG,YAAY,kB,+BC5BnBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,mDAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCeLO,EAbK,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAExB,OACI,sBAAKc,UAAU,yCAAf,UACI,4BAAIJ,IACJ,mBAAGK,KAAMf,EAAML,OAJT,SAIN,SACI,qBAAKqB,IAAKhB,EAAKiB,IAAKP,UCsBrBQ,EA1BC,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAGZjB,mBAAS,CAC/BwB,KAAM,GACNc,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAuBtC,OAdAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGtB,CAACrB,IAMGsB,EDpByBK,CAAa3B,GAAhCa,EAFe,EAErBN,KAAcc,EAFO,EAEPA,QAIrB,OACI,qCACA,oBAAIL,UAAU,oCAAd,SAAmDhB,EAAS4B,gBAC5D,mBAAGZ,UAAU,mCAAb,SAAiDK,GAAW,YAC5D,qBAAKL,UAAU,gDAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEQlBkB,EAtBO,WAAO,IAAD,EAEY9C,mBAAS,CAAC,WAFtB,mBAEjB+C,EAFiB,KAELhD,EAFK,KAKxB,OACI,gCACI,+CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEIgD,EAAWrB,KAAI,SAAAlB,GAAI,OACf,cAAC,EAAD,CAAoBS,SAAUT,GAAhBA,Y,MCZlCwC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.42ba9c2f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(item => [inputValue, ...item ]);\r\n            setInputValue('');\r\n        } else {console.log('Nombre no v√°lido')}\r\n\r\n        \r\n    };\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    placeholder='Put a name'\r\n                />\r\n            </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=DcDNOvCPMWRDXs8lIEmWCI90aCHPITn4&q=${encodeURI(category)}=25&offset=0&rating=g&lang=en&limit=10`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({title,url}) => {\r\n    const blank = '_blank';\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <p>{title}</p>\r\n            <a href={url}  target={blank} >\r\n                <img src={url} alt={title} />\r\n            </a>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{category.toUpperCase()}</h3>\r\n        <p className='animate__animated animate__flash'>{loading && 'Loading'}</p>\r\n        <div className='card-grid animate__animated animate__delay-2s'>\r\n            {\r\n                images.map(img => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../utils/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                })\r\n            })\r\n    }, [category]);\r\n\r\n    // el [] es para poder usar el componente cuando sea renderizao por primera vez\r\n    // hace semejanza con el componentDidMount\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr></hr>\r\n            <ol>\r\n            {\r\n                categories.map(item => (\r\n                    <GifGrid key={item} category={item} />\r\n                ))\r\n            }\r\n            </ol>\r\n\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <>\n    <GiftExpertApp />\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}